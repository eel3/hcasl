#!/usr/bin/env python
# encoding: utf-8
# -*- coding: utf-8 -*-
# vim:fileencoding=UTF-8
# @(#) Command line tool for "head -c N && shift 1 byte" loop. Version 1.0.1.20151103

from __future__ import print_function

import argparse
import collections
import sys

def dump_buf(ostream, buf):
    for s in buf:
        ostream.write(s)
    ostream.write('\n')

def hcasl(istream, ostream, bytes, buf):
    while True:
        s = istream.read(1)
        if s == '':
             break
        buf.append(s)
        if len(buf) >= bytes:
            dump_buf(ostream, buf)
            buf.popleft()

parser = argparse.ArgumentParser(description='Command line tool for "head -c N && shift 1 byte" loop.')
parser.add_argument('-n', '--bytes', nargs='?', const=8, default=8, type=int,
                    help='print the BYTES bytes per line (BYTES >= 1)')
parser.add_argument('-o', '--output', nargs='?', const='-', default='-',
                    help="place output in file OUTPUT")
parser.add_argument('-v', '--version', action='version', version='%(prog)s 1.0.0')
args = parser.parse_known_args()

bytes = args[0].bytes
if bytes <= 0:
    parser.print_help(sys.stderr)
    sys.exit(1)

output = args[0].output
ostream = sys.stdout
if output != '-':
    try:
        ostream = open(output, 'wb')
    except IOError as e:
        print(e[1], sys.stderr)
        sys.exit(1)

buf = collections.deque()
retval = 0

if len(args[1]) <= 0:
    hcasl(sys.stdin, ostream, bytes, buf)
else:
    for input in args[1]:
        if input == '-':
            hcasl(sys.stdin, ostream, bytes, buf)
        else:
            try:
                istream = open(input, 'rb')
                hcasl(istream, ostream, bytes, buf)
                istream.close()
            except IOError as e:
                print(e[1], sys.stderr)
                retval = 1

if ostream != sys.stdout:
    ostream.close()

sys.exit(retval)
